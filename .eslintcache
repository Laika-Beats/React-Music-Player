[{"/Users/jt/Documents/React Projects/react-music-player/src/index.js":"1","/Users/jt/Documents/React Projects/react-music-player/src/App.js":"2","/Users/jt/Documents/React Projects/react-music-player/src/components/Player.js":"3","/Users/jt/Documents/React Projects/react-music-player/src/components/Song.js":"4","/Users/jt/Documents/React Projects/react-music-player/src/components/Library.js":"5","/Users/jt/Documents/React Projects/react-music-player/src/components/LibrarySong.js":"6","/Users/jt/Documents/React Projects/react-music-player/src/components/Nav.js":"7","/Users/jt/Documents/React Projects/react-music-player/src/data.js":"8"},{"size":198,"mtime":1611514582646,"results":"9","hashOfConfig":"10"},{"size":2272,"mtime":1611706297539,"results":"11","hashOfConfig":"10"},{"size":3163,"mtime":1611705592816,"results":"12","hashOfConfig":"10"},{"size":289,"mtime":1611530803116,"results":"13","hashOfConfig":"10"},{"size":716,"mtime":1611631162244,"results":"14","hashOfConfig":"10"},{"size":821,"mtime":1611704997492,"results":"15","hashOfConfig":"10"},{"size":444,"mtime":1611630927207,"results":"16","hashOfConfig":"10"},{"size":2152,"mtime":1611699750156,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"xik2e1",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"/Users/jt/Documents/React Projects/react-music-player/src/index.js",[],["36","37"],"/Users/jt/Documents/React Projects/react-music-player/src/App.js",[],"/Users/jt/Documents/React Projects/react-music-player/src/components/Player.js",["38"],"import React, { useEffect } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faPlay,\n  faAngleLeft,\n  faAngleRight,\n  faPause,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nfunction Player({\n  currentSong,\n  isPlaying,\n  setIsPlaying,\n  audioRef,\n  songInfo,\n  setSongInfo,\n  songs,\n  setCurrentSong,\n  setSongs,\n}) {\n  useEffect(() => {\n    const newSongs = songs.map((song) => {\n      if (song.id === currentSong.id) {\n        return {\n          ...song,\n          active: true,\n        };\n      } else {\n        return {\n          ...song,\n          active: false,\n        };\n      }\n    });\n    setSongs(newSongs);\n\n    //if track is playing when skipped the next track will start playing\n    if (isPlaying) {\n      audioRef.current.play();\n    }\n  }, [currentSong]);\n\n  function playSongHandler() {\n    if (isPlaying) {\n      audioRef.current.pause();\n      setIsPlaying(false);\n    } else {\n      audioRef.current.play();\n      setIsPlaying(true);\n    }\n  }\n\n  const getTime = (time) => {\n    return (\n      Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2)\n    );\n  };\n  const dragHandler = (e) => {\n    audioRef.current.currentTime = e.target.value;\n    setSongInfo({ ...songInfo, currentTime: e.target.value });\n  };\n\n  const skipTrackHandler = async (direction) => {\n    let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\n\n    if (direction === \"skip-forward\") {\n      await setCurrentSong(songs[(currentIndex + 1) % songs.length]);\n    }\n    if (direction === \"skip-back\") {\n      if ((currentIndex - 1) % songs.length === -1) {\n        await setCurrentSong(songs[songs.length - 1]);\n        return;\n      }\n      await setCurrentSong(songs[(currentIndex - 1) % songs.length]);\n    }\n  };\n\n  const trackAnim = {\n    transform: `translateX(${songInfo.animationPercentage}%)`,\n  };\n\n  return (\n    <div className=\"player\">\n      <div className=\"time-control\">\n        <p>{getTime(songInfo.currentTime)}</p>\n        <div\n          style={{\n            background: `linear-gradient(to right, ${currentSong.color[0]}, ${currentSong.color[1]}`,\n          }}\n          className=\"track\"\n        >\n          <input\n            min={0}\n            max={songInfo.duration || 0}\n            value={songInfo.currentTime}\n            onChange={dragHandler}\n            type=\"range\"\n          ></input>\n          <div style={trackAnim} className=\"animate-track\"></div>\n        </div>\n\n        <p>{songInfo.duration ? getTime(songInfo.duration) : \"0.00\"}</p>\n      </div>\n      <div className=\"play-control\">\n        <FontAwesomeIcon\n          onClick={() => skipTrackHandler(\"skip-back\")}\n          className=\"skip-back\"\n          size=\"2x\"\n          icon={faAngleLeft}\n        />\n        <FontAwesomeIcon\n          onClick={playSongHandler}\n          className=\"play\"\n          size=\"2x\"\n          icon={!isPlaying ? faPlay : faPause}\n        />\n        <FontAwesomeIcon\n          className=\"skip-forward\"\n          size=\"2x\"\n          icon={faAngleRight}\n          onClick={() => skipTrackHandler(\"skip-forward\")}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default Player;\n","/Users/jt/Documents/React Projects/react-music-player/src/components/Song.js",[],"/Users/jt/Documents/React Projects/react-music-player/src/components/Library.js",[],"/Users/jt/Documents/React Projects/react-music-player/src/components/LibrarySong.js",[],"/Users/jt/Documents/React Projects/react-music-player/src/components/Nav.js",[],"/Users/jt/Documents/React Projects/react-music-player/src/data.js",[],{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":41,"column":6,"nodeType":"45","endLine":41,"endColumn":19,"suggestions":"46"},"no-native-reassign",["47"],"no-negated-in-lhs",["48"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'audioRef', 'isPlaying', 'setSongs', and 'songs'. Either include them or remove the dependency array. If 'setSongs' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["49"],"no-global-assign","no-unsafe-negation",{"desc":"50","fix":"51"},"Update the dependencies array to be: [audioRef, currentSong, isPlaying, setSongs, songs]",{"range":"52","text":"53"},[797,810],"[audioRef, currentSong, isPlaying, setSongs, songs]"]